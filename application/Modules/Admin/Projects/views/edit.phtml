<?php

use Jet\MVC;
use Jet\MVC_View;
use Jet\Form;
use Jet\Form_Renderer;
use Jet\Tr;
use Jet\UI;
use JetApplication\Deployment_Backend;

/**
* @var MVC_View $this
* @var Form $form
*/

$form = $this->getRaw( 'form' );

$form->renderer()->setDefaultLabelWidth( [
	Form_Renderer::LJ_SIZE_EXTRA_SMALL => 12,
	Form_Renderer::LJ_SIZE_SMALL => 12,
	Form_Renderer::LJ_SIZE_MEDIUM => 2,
	Form_Renderer::LJ_SIZE_LARGE => 2
] );

$form->renderer()->setDefaultFieldWidth( [
	Form_Renderer::LJ_SIZE_EXTRA_SMALL => 12,
	Form_Renderer::LJ_SIZE_SMALL => 12,
	Form_Renderer::LJ_SIZE_MEDIUM => 10,
	Form_Renderer::LJ_SIZE_LARGE => 8
] );

$form->field( 'allowed_extensions' )->input()->addCustomCssStyle('height: 200px;');
$form->field( 'blacklist' )->input()->addCustomCssStyle('height: 400px;');
$form->field( 'web_hooks' )->input()->addCustomCssStyle('height: 400px;');

if(!$form->field( 'code' )->getIsReadonly()) {
	$form->field('name')->input()->addJsAction('onkeyup', 'generateCode(this.value)');
	$form->field('code')->input()->addJsAction('onkeyup', 'generateCode(this.value)');
	
}

$form->field('code')->input()->addCustomCssStyle('opacity: 0.3');
$form->field('code')->label()->addCustomCssStyle('opacity: 0.3');

$form->field('notes')->input()->addCustomCssStyle('height: 300px;');

foreach($form->getFields() as $field) {
	if(
		!str_starts_with( $field->getName() , 'connection' ) ||
		$field->getName()=='connection_type'
	) {
		continue;
	}
	
	$field->row()->addCustomCssClass('connection_edit_field');
	$field->row()->setDataAttribute('field', $field->getName());
}

$form->field('connection_type')->input()->addJsAction('onchange', 'changeType(this.options[this.selectedIndex].value)');

$visible_fields = [];

foreach(Deployment_Backend::getAvailableBackends() as $type=>$type_label) {
	$visible_fields[$type] = Deployment_Backend::getBackendConnectionEditFormFieldNames( $type );
}

$current_visible_fields = $visible_fields[$form->field('connection_type')->getValue()];

$all_connection_fields = [
	'connection_host',
	'connection_port',
	'connection_username',
	'connection_password',
	'connection_public_key_file_path',
	'connection_private_key_file_path',
	//'connection_local_username',
	'connection_base_path',
];

?>

<?= $form->start(); ?>

<div class="row toolbar" id="main-toolbar">
	<div class="col-md-12">
		<?= UI::button_goBack()->setUrl( MVC::getPage()->getURLPath() ) ?>
		<?php if( !$form->getIsReadonly() ): ?>
			<?= UI::button_save() ?>
		<?php endif; ?>
	</div>
</div>

<div class="row">
	<div class="col-md-12" id="main-col">
		<div class="row">
			<div class="col-md-2"></div>
			<div class="col-md-10">
				<h3><?= Tr::_('Main info')?></h3>
			</div>
		</div>

		<?= $form->field( 'name' ) ?>
		<?= $form->field( 'code' ) ?>
		<?= $form->field( 'project_role_access' ) ?>
		<?= $form->field( 'notes' ) ?>

		<div class="row">
			<div class="col-md-2"></div>
			<div class="col-md-10">
				<h3><?= Tr::_('Files')?></h3>
			</div>
		</div>
		
		<?= $form->field( 'source_dir' ) ?>
		<?= $form->field( 'allowed_extensions' ) ?>
		<?= $form->field( 'blacklist' ) ?>
		
		<div class="row">
			<div class="col-md-2"></div>
			<div class="col-md-10">
				<h3><?= Tr::_('Web hooks')?></h3>
			</div>
		</div>
		<?= $form->field( 'web_hooks' ) ?>

		<div class="row">
			<div class="col-md-2"></div>
			<div class="col-md-10">
				<h3><?= Tr::_('Production server connection')?></h3>
			</div>
		</div>
		
		<?= $form->field( 'connection_type' ) ?>
		
		<?php foreach($all_connection_fields as $field_name):
			$field = $form->field($field_name);
		
			if(!in_array($field_name, $current_visible_fields)) {
				$field->row()->addCustomCssStyle('display:none');
			}
			
			echo $field;
		endforeach; ?>
	</div>
</div>
<?= $form->end(); ?>

<br><br><br><br><br><br><br><br>

<script>
	const visible_fields = <?=json_encode($visible_fields)?>;

	const changeType = function ( type ) {

		const v_f = visible_fields[type];

		$('.connection_edit_field').each( function ( index, row ) {
			if(v_f.includes(row.dataset['field'])) {
				$(row).show();
			} else {
				$(row).hide();
			}
		} );
	};

	const generateCode = function ( name ) {
		$.ajax({
			url: '?generate_code='+encodeURIComponent(name),
			dataType: 'json'
		}).done(function(result) {
			$('#add_form__code').val( result['code'] );
		});
	}
</script>
